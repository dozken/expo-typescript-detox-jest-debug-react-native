version: 2.1

orbs:
  node: circleci/node@5.0.1
  rn: react-native-community/react-native@6.8.1
  android: circleci/android@2.0.0

jobs:
  install-and-test:
    docker:
      - image: cimg/node:14.19.1
        environment:
          TZ: "Asia/Singapore"
    working_directory: ~/circleci-build
    steps:
      - checkout
      - rn/yarn_install
      - run:
          command: echo "yarn lint"
          name: Run linter
      - run:
          command: echo "NODE_OPTIONS=--max_old_space_size=4000 yarn test:coverage --watchAll=false"
          name: Jest
      - run:
          command: echo "NODE_OPTIONS=--max_old_space_size=4000 yarn run sonar-scanner -Dsonar.host.url=${SONAR_HOST_URL} -Dsonar.login=${SONAR_TOKEN}"
          name: Static code analysis
      - store_artifacts:
          path: ~/project/coverage
      - store_artifacts:
          path: ~/project/test-report.xml
      - store_artifacts:
          path: ~/project/artifact
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - circleci-build/node_modules

  build_ios_release:
    executor:
      name: rn/macos
      xcode_version: '13.3.0'
    working_directory: ~/circleci-build
    steps:
      - attach_workspace:
          at: /home/circleci
      - rn/pod_install
      - run:
          command: npm run detox-build:ios-release
          name: Build iOS release for e2e tests
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - circleci-build/ios

  test_ios_release:
    executor:
      name: rn/macos
      xcode_version: '13.3.0'
    working_directory: ~/circleci-build
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Install AppleSimulatorUtils
          command: |
            HOMEBREW_NO_INSTALL_CLEANUP=1 HOMEBREW_NO_AUTO_UPDATE=1 brew tap wix/brew >/dev/null
            HOMEBREW_NO_INSTALL_CLEANUP=1 HOMEBREW_NO_AUTO_UPDATE=1 brew install applesimutils >/dev/null
      - rn/ios_simulator_start:
          device: 'iPhone 13 Pro Max'
      - run:
          command: npx detox clean-framework-cache && npx detox build-framework-cache
          name: Clean Detox Cache
      - run:
          command: yarn detox-test:ios-release
          name: Run E2E Tests
      - store_test_results:
          path: ~/project/e2e/artifacts/ios-junit.xml
      - store_artifacts:
          path: ~/project/e2e/artifacts

#  build_android_release:
#    executor:
#      name: android/android-machine
#      resource-class: large
#      tag: 2022.03.1
#    steps:
#      - attach_workspace:
#          at: .
#      - run:
#          command: cd android ; ./gradlew clean ; cd -
#          name: Clean gradle cache
#      - run:
#          command: npm run detox-build:android-release
#          name: build app for e2e tests
#      - persist_to_workspace:
#          root: .
#          paths:
#            - '*'
#
#  test_android_release:
#    executor:
#      name: android/android-machine
#      resource-class: large
#      tag: 202102-01
#    steps:
#      - attach_workspace:
#          at: .
#      - android/create-avd:
#          avd-name: EMU_API_30
#          system-image: system-images;android-29;default;x86
#          install: true
#      - android/start-emulator:
#          avd-name: EMU_API_30
#          no-window: true
#          restore-gradle-cache-prefix: v1a
#          post-emulator-launch-assemble-command: "pwd"
#      - android/disable-animations
#      - run:
#          command: npm run detox-test:android-release
#          name: run e2e tests
#      - store_test_results:
#          path: ~/project/e2e/artifacts/android-junit.xml
#      - store_artifacts:
#          path: ~/project/e2e/artifacts

workflows:
  "Install & Test":
    jobs:
      - install-and-test

      - build_ios_release:
          requires:
            - install-and-test

      - test_ios_release:
          requires:
            - build_ios_release

      #      - build_android_release:
      #          requires:
      #            - static_code_analysis
#      - test_android_release:
#          requires:
#            - build_android_release
